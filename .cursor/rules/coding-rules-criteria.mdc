---
alwaysApply: true
---
# Coding Rules Criteria
- All code must use English language: variables, functions, filenames, etc. No Polish allowed in code.
- Code must be self-explanatory without comments. 
- Only use comments for, temporary workarounds â€” never for standard logic. If a comment feels needed, rethink the code.
- All code must be covered by tests
- All tests must be deterministic, with exact, well-defined assertions (no "this or possibly that" approach)
- Prefer *reuse existing code* over *create new code*, whenever it is possible
- When creating code, keep it *reusable for future tasks* wherever it makes sense and is compatibile with best practices and official standards.
- Always follow official documentations and/or well-known practises for technologies used. For example: Typescript official documentation and guidelines, accepted answers from stackoverflow and well-known best practises, Node.js official documentation, Javascript official documentation, ECMA Script standard, NPM official documentation, package official documentation or its README if use packages, best node practices, accepted package-related answers from stackoverflow and well-known best practises and standards.
- Never relay on shady, not accepted by community, not bulletproof solutions.
- Never mix technologies in Your answers, for example: when asked about some "formik" package problem, don't give "informed" package solutions. When asked for node.js server specific problem, don't give "php" server solutions, etc. 
- Be always aware if You work with frontend or backend code.
- For backend, be always aware if it's ESM or CJS project. 
- For frontend, be always aware of framework, for example: if this is React or vanilla.js or other.
- Be always aware of exact NPM packages used in project - their name, documentation for exact version. Base on this knowledge.   
- Only use bullet-proof code and architecture 
- Never "figure-it-out" solutions by Yourself, never use made-up answers, never use filler-language. Admit You don't know, if You don't know.
